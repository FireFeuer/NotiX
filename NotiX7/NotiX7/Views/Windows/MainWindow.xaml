<Window x:Class="NotiX7.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NotiX7"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:uc ="clr-namespace:NotiX7.Views.UserControls"
        mc:Ignorable="d"
        xmlns:converters="clr-namespace:NotiX7.Assets.Converters"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        DataContext="{Binding WindowViewModel,Source={StaticResource ServiceLocator}}"
        Title="MainWindow" Height="450" Width="800"  Icon="\Resources\Icons\Note.png"
       Background="#FFE4DCD0">

    <Window.Resources>

    </Window.Resources>



    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="60"/>

        </Grid.RowDefinitions>

        <Border x:Name="border" Grid.Row="1"
                Background="#172736"
                Margin="150 3"
                CornerRadius="6"
                Height="auto"
                MaxHeight="70"
                MaxWidth="550">
            <StackPanel HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    Grid.Row="1">
                <Button Width="{Binding ActualHeight, ElementName=border, Mode=OneWay}"
                        Height="{Binding ActualHeight, ElementName=border, Mode=OneWay}" 
                        Background="Transparent" 
                        x:Name="Note_placement_button" 
                        Command="{Binding AddNoteCommand}"
                        BorderThickness="0"
                        BorderBrush="White">
                    <Image Source="\Resources\Icons\Note.png"
                           Margin="1 0 3 0"></Image>
                    <Button.Resources>
        <Style TargetType="Border">
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
    </Button.Resources>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}" 
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetProperty="BorderThickness">
                                                <ThicknessAnimation From="0" 
                                                                 To="3"
                                                                  Duration="0:0:0.03">
                                                    
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>

                                <EventTrigger RoutedEvent="MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard Storyboard.TargetProperty="BorderThickness">
                                            <ThicknessAnimation From="3" 
                                                                 To="0"
                                                                  Duration="0:0:0.03">

                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <!--<MenuItem Header="S" Command="{Binding SelectSize1Command}"></MenuItem>
                            <MenuItem Header="M" Command="{Binding SelectSize2Command}"/>
                            <MenuItem Header="L" Command="{Binding SelectSize3Command}"/>-->
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>
            </StackPanel>
        </Border>

        <Canvas x:Name="Board" Grid.Row="0" Background="Transparent">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction
                            Command="{Binding BoardMouseDownCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseMove">
                    <i:InvokeCommandAction
                            Command="{Binding MoveNoteCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseUp">
                    <i:InvokeCommandAction
                            Command="{Binding Drop_a_noteCommand}" />
                </i:EventTrigger>

            </i:Interaction.Triggers>

            <ItemsControl ItemsSource="{Binding Items, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>


                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Left" Value="{Binding X, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <uc:NOte >

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction
                            Command="{Binding SelectingCommand}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction
                          Command="{Binding UnselectingCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </uc:NOte>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Canvas>

    </Grid>
</Window>
